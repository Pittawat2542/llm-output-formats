**Game**
The `enemy` field will contain a list of properties in the `stats` format (see example), with a key of the corresponding property name in the `game.enemy` object.

**Example**
In JSON format, it looks like this:

```json
{
    "game": {
        "game": {
            "stats": {
                "hp": "hp int value",
                "atk": "atk int value",
                "mp": "mp int value",
                "def": "def int value",
                "spd": "spd int value"
            }
        }
    }, {
        "enemy": {
            "name": "NPC",
            "id": "NPC",
            "hp": "20000"
        }
    }
}
```

Output:
```json
{
   "game": {"game": {"stats": {"hp": "NPC name", "atk": "/NPC description", "mp": "NPC description", "def": "NPC stats", "spd": "", "enemy": {"NPC name": "NPC", "id": "id", "hp": "20000"}}}
}\n**

The JSON should use the `{"NPC name": "NPC description", "id": "NPC", "hp": "NPC stats", "atk": "NPC atk (atk: {stats.mp} stats[!stats.hp>=3000]), "def": {"NPC stats": "NPC stats", "spd": "NPC spd at (spd<=4000)", "enemy": {"name": "NPC name", "hp": "NPC HP at (hp>3m) {hp:40000}, "atk": (hp>30000?Atk+: {hp:4000000}, "def": {"enemy": {"id": enemy.id, "hp": enemy.hp (hp>10000?Enemy+: HP>1000000, stats: {hp:{stats.hp}}, HP:3m}}}, {hp:hp>>30000?Atk>2d?Atk<2d+: HP>6,500; (hp>9x1m?Atk>10,000; Atk<=3d?Atck<1d: HP>50,000)}}}"
```