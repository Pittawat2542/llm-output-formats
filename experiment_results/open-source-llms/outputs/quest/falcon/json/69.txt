| In: |
| | 
| In Markdown: |
| - | 
| | 
- 
You can use the following command to extract only the JSON part of the Markdown code block:

```docker run node:https://bitbucket.org/git-scm/bitbucket.git
    cat /path/to/your/md file
    sed -n "1c^\\s*json\\s*\"$PIC\"$PIC*\\e[A-Z]%{}\e[0-9]\n\""
    command /usr/local/bin/phantom
    cat file.json
    sed -n "1c^\\s*PIC*$PIC*\\e[A-Z]%{}\e[0-9]\n\""
    command /usr/local/bin/phantom
    cat file2.json
    sed -n "1c^\\s*tasks.*$PIC*\\e[A-Z]%(){
    n=$(this-substring)
    eval "\\$(n.property|tput|grep-v=$(n.property|tput): " | tr \\x0 \\x2 | sed -n "1c^\\s*objective:.*$PIC*" >> output.js
    sed -n "1c^\\s*location.\\s*\\e[A-Z]%(){
    local title=$n.title
    local location=$n.location
    cat "game.json" <<< "$(cat "file.json"; $(sed -n "1c^\\s*location.\\s*$title".$(sed -n "1c^\\s*location.\\s.*$key" | xargs grep-v=$(n.property|tput): " | xargs -n 1 "$(cat "file2.json"; $(sed -n "1c^\\s*location: $title. \\{$key\\; $(sed -n "1c^\\s*name: $title. \\{$key\\; $(sed -n "1c^\\s*description: $title. \\{$key\\; $(sed -n "1c^\\s*obj.id:$key" | xargs -n 1 "$(xargs -n 1 "$(cat "output.json" <<< "$(json "$(n.objective)"; $(n.objective))\\;;\\"; $(n.description)\\;;\\"; $(n.location)|\\(xargs "$(cat "game.json" <<< "$(n.property)"; $(n.property)")) " -v "$(n.title)"`
```

The output will look like this:

```json
{
    "game": {
        "id": "my-game",
        "title": "My game title",
        "objective": "My game objective",
        "location": "my-game.css",
        "description": "My game description",
        "observer": "obs",
        "reward": "My game reward"
    }
}
```