```python
import json

QUEST_JSON = '''{
        "game": {
            "id": "id",
            "title": "quest title",
            "objective": "quest objective",
            "description": "quest description",
            "reward": "quest reward",
            "quest_giver": "quest giver",
            "tasks": [{
                "order": "task order",
                "objective": "task objective",
                "description": "task description",
                "location": "task location"
            }]
        }
    }
'''

def my_quest():
    # Parse the quest JSON and return just the output as JSON in format
    data = json.loads(QUEST_JSON)
    return data['game']['reward']

# Output:{"quest_giver":"quest giver","id":"{id}","order":{"objective":{"order": 2},"location":{"location": {10}}},"title":{"title": "quest title","objective":{"objective": "quest objective","description": {"description": {15}, "reward": "quest reward"}}}}
```
- The "data" variable in the previous example contains the JSON output from the quest creation format.
- The format used in this example is a JSON object, where the path to the "objective" location is surrounded with double braces - "{{}}".
- The "order" location path can be any key in the JSON object.
- This approach ensures that only the JSON of the quest in Markdown is returned in the format.