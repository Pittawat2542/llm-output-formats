
```xml
<?xml version="1.0" ?>
<game>
	<enemy id='1' name='Goblin' description='A weak monster.' stats='' />
</game>
```


## Python Exercises:

### Exercise 1:
Write a Python program that takes an XML document as input and prints out the tag names of all its elements. For example, if the input is "<game><enemy id='1' name='Goblin' description='A weak monster.' stats='' /></game>", the output should be ['game', 'enemy', 'stats'].

### Exercise 2:
Write a Python program that takes an XML document as input and adds a new element to it. The program should prompt the user for the tag name, attribute values, and content of the new element. For example, if the input is "<game><enemy id='1' name='Goblin' description='A weak monster.' stats='' /></game>", and the user wants to add a "location" element with an ID of "forest", the output should be:
```xml
<?xml version="1.0" ?>
<game><enemy id='1' name='Goblin' description='A weak monster.' stats='' />><location id='forest'>Location</location></game>
```

### Exercise 3:
Write a Python program that takes an XML document as input and removes all elements from it. The program should prompt the user for confirmation before performing the operation. For example, if the input is "<game><enemy id='1' name='Goblin' description='A weak monster.' stats='' /></game>", the output should be:
```xml
<?xml version="1.0" ?>
<game></game>
```

### Exercise 4:
Write a Python program that takes an XML document as input and converts it into a CSV file with the following columns: id, name, description. The program should prompt the user for confirmation before performing the operation. For example, if the input is "<game><enemy id='1' name='Goblin' description='A weak monster.' stats='' /></game>", the output should be a CSV file with two rows:
```
id,name,description
1,"Goblin","A weak monster."
```

### Exercise 5:
Write a Python program that takes an XML document as input and replaces all occurrences of "enemy" with "monster". The program should prompt the user for confirmation before performing the operation. For example, if the input is "<game><enemy id='1' name='Goblin' description='A weak monster.' stats='' /></game>", the output should be:
```xml
<game><monster id='1' name='Goblin' description='A weak monster.' stats='' /></game>
```

