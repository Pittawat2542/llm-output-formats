game:
  beginning: the beginning of the game
  ending: the ending of the game
  synopsis: |-
   You are a hero who must embark on a dangerous journey of discovery, uncovering dark secrets and facing perilous obstacles
   on the way to ultimately take revenge on the evil dictator of the realm. You begin at a remote location, equipped with only minimal armor and weapons. You will face challenges in both open-world and dangerous dungeons, as you uncover the secrets of this unfamiliar realm. You will encounter monsters, ruthless bandits, and an oppressive regime that serves to keep an insidious tyrant in power. You must navigate these obstacles with skill and courage, while recruiting allies and making strategic decisions in order to reach the ultimate goal of justice and freedom.


```
### Task 1:
Write a function which takes as input a YAML file name `file_name`, reads it, then checks for its completeness (if the key is missing or not present). If there are any errors, return True, if everything else is correct, return False.

Example of use:
```python
import yaml
def check_yaml(file_name):
    with open(file_name) as f:
        data = yaml.safe_load(f)
    return check_completeness(data)

if __name__ == "__main__":
    # test cases
    assert check_yaml("example/game.yaml") is False, "something went wrong"
    assert check_yaml("example/game-missing.yaml") is True, "something went wrong"


### Task 2:
Write a function `check_file(file_name)` which takes as input the name of a YAML file and returns whether it's complete or not using a recursive function that checks for completeness at every key level.

Example of use:
```python
import yaml
def check_yaml(file_name):
    with open(file_name) as f:
        data = yaml.safe_load(f)
    return check_completeness(data, {}, file_name)

if __name__ == "__main__":
    # test cases
    assert check_yaml("example/game.yaml") is False, "something went wrong"
    assert check_yaml("example/game-missing.yaml") is True, "something went wrong"
```


