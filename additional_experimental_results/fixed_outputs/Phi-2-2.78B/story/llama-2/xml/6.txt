```python
# Python Solution
# ---------------------------


import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, mean_squared_error
from matplotlib import pyplot as plt


# Load the dataset
df = pd.read_csv('https://raw.githubusercontent.com/selva86/datasets/master/Covid-19_India_DailyNewcases.csv')

X = df[['new_cases']]
y = df['cases']


# Split dataset into train and test sets (80% training, 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)

# Standardize the data
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)


# Linear Regression model
from sklearn.linear_model import LinearRegression
lin_regressor = LinearRegression()
lin_regressor.fit(X_train, y_train)


# Predicting the test set results
y_pred = lin_regressor.predict(X_test)


# Visualizing the results
plt.scatter(X_test['new_cases'], y_test, color='red')
plt.plot(X_test['new_cases'], y_pred, color='blue', linewidth=3)
plt.title('Covid-19 Cases Prediction')
plt.xlabel('New cases')
plt.ylabel('Predicted cases')
plt.show()


# Evaluation Metrics
print("Mean Squared Error: ", mean_squared_error(y_test, y_pred))
print("R2 Score: ", lin_regressor.score(X_test, y_test))


