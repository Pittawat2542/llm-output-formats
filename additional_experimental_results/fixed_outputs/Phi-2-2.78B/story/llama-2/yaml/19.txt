---
title: game title
description: The game is about a player character who has to complete tasks in order to save the world from an evil villain.
synopsis: In this action-adventure game, players must explore vast landscapes and defeat dangerous enemies in order to advance through levels and ultimately defeat the evil villain.
release_date: 2021-01-01
platforms: [Windows, OS X]
```

## Exercises

1. Given a list of dictionaries with information on multiple books, use YAML to store the data in a readable format for an online bookstore website. 

    Example input:
    ```python
    books = [{'title': 'The Great Gatsby', 'author': 'F. Scott Fitzgerald', 'year_published': 1925},
             {'title': 'To Kill A Mockingbird', 'author': 'Harper Lee', 'year_published': 1960}]
    ```

    Example output:
    ```yaml
    books:
        - title: The Great Gatsby
          author: F. Scott Fitzgerald
          year_published: 1925
        - title: To Kill A Mockingbird
          author: Harper Lee
          year_published: 1960
    ```

   Solution:
    ```yaml
    books:
      - title: The Great Gatsby
        author: F. Scott Fitzgerald
        year_published: 1925
      - title: To Kill A Mockingbird
        author: Harper Lee
        year_published: 1960
    ```

   Ideas for variation: 
   - Add more information about each book, such as the publisher and genre.
   - Write a function that takes in the list of dictionaries and returns a YAML string.


2. Given a dictionary with information on multiple movies, use YAML to store the data in a readable format for an online streaming platform website. 

    Example input:
    ```python
    movies = {'title': 'The Godfather', 'director': 'Francis Ford Coppola', 'year_released': 1972, 'genre': ['crime', 'drama']}
    ```

    Example output:
    ```yaml
    movie:
      - title: The Godfather
        director: Francis Ford Coppola
        year_released: 1972
        genre: [crime, drama]
    ```

   Solution:
    ```yaml
    movie:
      - title: The Godfather
        director: Francis Ford Coppola
        year_released: 1972
        genre: [crime, drama]
    ```

   Ideas for variation: 
   - Add more information about each movie, such as the main actors and plot.
   - Write a function that takes in the dictionary and returns a YAML string.


3. Given a list of dictionaries with information on multiple countries, use YAML to store the data in a readable format for an online travel platform website. 

    Example input:
    ```python
    countries = [{'name': 'USA', 'capital': 'Washington D.C.', 'population': 331002651},
                 {'name': 'Canada', 'capital': 'Ottawa', 'population': 37742154}]
    ```

    Example output:
    ```yaml
    countries:
      - name: USA
        capital: Washington D.C.
        population: 331002651
      - name: Canada
        capital: Ottawa
        population: 37742154
    ```

   Solution:
    ```yaml
    countries:
      - name: USA
        capital: Washington D.C.
        population: 331002651
      - name: Canada
        capital: Ottawa
        population: 37742154
    ```

   Ideas for variation: 
   - Add more information about each country, such as official languages and currency.
   - Write a function that takes in the list of dictionaries and returns a YAML string.


4. Given a dictionary with information on multiple cars, use YAML to store the data in a readable format for an online car dealership website. 

    Example input:
    ```python
    cars = {'make': 'Honda', 'model': 'Civic', 'year_released': 2020, 'price': 22000}
    ```

    Example output:
    ```yaml
    car:
      - make: Honda
        model: Civic
        year_released: 2020
        price: 22000
    ```

   Solution:
    ```yaml
    car:
      - make: Honda
        model: Civic
        year_released: 2020
        price: 22000
    ```

   Ideas for variation: 
   - Add more information about each car, such as fuel economy and safety features.
   - Write a function that takes in the dictionary and returns a YAML string.


5. Given a list of dictionaries with information on multiple employees, use YAML to store the data in a readable format for an online HR platform website. 

    Example input:
    ```python
    employees = [{'name': 'John Smith', 'position': 'Manager', 'salary': 80000},
                 {'name': 'Jane Doe', 'position': 'Assistant Manager', 'salary': 60000}]
    ```

    Example output:
    ```yaml
    employees:
      - name: John Smith
        position: Manager
        salary: 80000
      - name: Jane Doe
        position: Assistant Manager
        salary: 60000
    ```

   Solution:
    ```yaml
    employees:
      - name: John Smith
        position: Manager
        salary: 80000
      - name: Jane Doe
        position: Assistant Manager
        salary: 60000
    ```

   Ideas for variation: 
   - Add more information about each employee, such as years of experience and education.
   - Write a function that takes in the list of dictionaries and returns a YAML string.
