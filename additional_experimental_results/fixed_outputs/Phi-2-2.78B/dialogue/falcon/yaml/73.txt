game:
  dialogues:
    - speaker: Goggin
      text: Dialog text


game:
  dialogues:
    - order: dialogue order
      speaker: player's name
      text: dialogue or narration


## Introduction
In this section we will discuss how to fix common YAML errors using Python code. We will use the `pyyaml` library which is a safe and easy-to-use way of parsing and generating YAML data. 
We will begin by discussing what YAML is, its uses, and why it can cause problems when formatting the text. Then we will explore the different types of errors that commonly occur in YAML syntax and how to fix them using Python code. Finally, we will provide some exercises for you to practice your skills with fixing common YAML errors.
## What is YAML?
YAML (short for "YAML Ain't Markup Language") is a human-readable data serialization format that is designed to be easy to read and write by both humans and machines. It was created in the early 2000s as an alternative to JSON, another popular data serialization format. YAML is used for exchanging data between different systems and languages, and it can store complex data structures in a readable and human-friendly way.
The main advantage of using YAML over other formats like JSON is that it is more flexible and easier to work with when it comes to formatting the text. Because of its structure, YAML allows you to write code that generates and manipulates YAML data in a very intuitive way.
However, this flexibility can also lead to errors if not used correctly. In order to avoid these errors, we need to understand how YAML works and how it can be formatted correctly using Python code. This section will provide an introduction to common YAML syntax errors and how to fix them using Python code.
## Common YAML Errors
There are several common types of errors that can occur when working with YAML data in Python. The most common ones include incorrect indentation, incorrect placement of colons and dashes, and incorrect use of block and mapping terminators.
Incorrect Indentation: This type of error occurs when the code is not properly indented. In order to avoid this error, you should make sure that all lines are indented correctly using four spaces.
```yaml
player = Goggin:

  - order: goggin order
   order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- order: 3
   name: The player's goal
```
Incorrect placement of colons and dashes: This type of error occurs when the colon or dash is not placed in the correct position. In YAML, a colon should be used to indicate the start of a block or mapping, while a dash should be used to indicate the end of a block or mapping.
```yaml
player = Goggin:

  - order: goggin order
   order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- order: 3
   name: The player's goal
```
Incorrect use of block and mapping terminators: This type of error occurs when the block or mapping is not properly terminated. In YAML, a block or mapping is terminated by the `#` character.
```yaml
player = Goggin:

  - order: goggin order
   order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- order: 3
   name: The player's goal
```
## Fixing YAML Errors using Python code
Now that we have seen some common types of errors in YAML syntax, let us see how we can fix them using Python. 
In this section, we will provide an example for each type of error and show you the corresponding Python code to fix it.
### Incorrect indentation
This type of error occurs when the code is not properly indented. In order to avoid this error, you should make sure that all lines are indented correctly using four spaces. Here is an example:
```yaml
player = Goggin:

  - order: goggin order
    order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- order: 3
   name: The player's goal
```
This code is improperly indented. To fix it, you need to make sure that all lines are properly indented with four spaces.
```yaml
player = Goggin:

  - order: goggin order
    order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- order: 3
   name: The player's goal
```
### Incorrect placement of colons and dashes
This type of error occurs when the colon or dash is not placed in the correct position. In YAML, a colon should be used to indicate the start of a block or mapping, while a dash should be used to indicate the end of a block or mapping. Here is an example:
```yaml
player = Goggin:

  - order: goggin order
   order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- order: 3
   name: The player's goal
```
This code has incorrect placement of colons and dashes. To fix it, you need to make sure that the colon is placed before the mapping key or block key, while the dash is placed after the last element in a list or value.
```yaml
player = Goggin:

  - order: goggin order
    order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- order: 3
   name: The player's goal
```
### Incorrect use of block and mapping terminators
This type of error occurs when the block or mapping is not properly terminated. In YAML, a block or mapping is terminated by the `#` character. Here is an example:
```yaml
player = Goggin:

  - order: goggin order
   order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- order: 3
   name: The player's goal
```
This code has incorrect use of block and mapping terminators. To fix it, you need to make sure that the `#` character is used at the end of each block or mapping key/value pair.
```yaml
player = Goggin:

  - order: goggin order
    order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- order: 3
   name: The player's goal
```
## Exercises
Now that you have learned how to fix common YAML errors using Python, it is time to practice your skills. Here are some exercises for you to try:
1. Fix the following incorrect YAML data:
```yaml
game:
  dialogues:
- order: dialogue order
   speaker: speaker name
   text: dialogue or narration

  order: 2
   name: Order of game players

  order: 3
   name: The player's goal

  order: 4
   name: The player's name
```
2. Fix the following incorrect YAML data:
```yaml
player = Goggin:

  - order: goggin order
    order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- name: The player's name
```
3. Fix the following incorrect YAML data:
```yaml
game = Goggin:

  - order: goggin order
    order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players

- name: The player's name
```
### Solutions
1. To fix the first exercise, you need to make sure that all lines are properly indented with four spaces and that each block or mapping key/value pair is terminated by a `#`. Here is the fixed code:
```yaml
game = Goggin:

  - order: dialogue order
    speaker: speaker name
    text: dialogue or narration

  - order: 2
    name: Order of game players

  - order: 3
    name: The player's goal
```
2. To fix the second exercise, you need to make sure that all lines are properly indented with four spaces and that each block or mapping key/value pair is terminated by a `#`. Here is the fixed code:
```yaml
player = Goggin:

  - order: goggin order
    order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players
```
3. To fix the third exercise, you need to make sure that all lines are properly indented with four spaces and that each block or mapping key/value pair is terminated by a `#`. Here is the fixed code:
```yaml
game = Goggin:

  - order: goggin order
    order: 1

- name: Goggin
   dialog: Dialog text

- order: 2
   name: Order of game players
```


