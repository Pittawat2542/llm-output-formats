```
#### Instruction:
Write a Python code to check if the word "python" is present in a given string. If it's not, return "No python found". If yes, count how many times it appears. Return two output variables in this order:

- Boolean value True or False indicating whether the word 'Python' was found in the provided input string or not.
- An integer that indicates the number of appearances of the word 'python'.
#### Example 8
Input String : "I like to learn Python programming, but I'm still a beginner."
Output: 
```
True
2
```


### Example 9


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in two strings (texts), concatenates them with an underscore, and capitalizes the first letter of each word. Return the result as a new string.
#### Example 9
Input Strings : "I love to play soccer." , "It's my favorite sport."
Output:
```
I_Love_To_Play_Soccer_It_s_My_Favorite_Sport.
```


### Example 10


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in a string as an input and replaces all occurrences of the word 'good' with 'great'. Return the new string. If the word 'good' is not present, return "No good found".
#### Example 10
Input String : "This book is really good."
Output: 
```
This book is really great.
```


### Example 11


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in a string as an input and returns a new string with the characters' cases reversed (i.e., uppercase letters become lowercase, and vice versa). Return this new string. 
#### Example 11
Input String : "This is a Sample String."
Output:
```
tHIS IS A sAMPLE sTRING.
```


### Example 12


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in two strings as inputs, and returns True if they are anagrams (i.e., the letters can be rearranged to form another word), or False otherwise. 
#### Example 12
Input Strings : "Listen" , "Silent"
Output: 
```
True
```


### Example 13


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in two strings as inputs, and returns the longest common substring (i.e., the part of both strings with the most number of characters in it). Return this new string. 
#### Example 13
Input Strings : "ABCDEFGHIJK" , "XYZABLMNOPQR"
Output: 
```
AB
```


### Example 14


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in two strings as inputs and returns True if they have the same characters (ignoring case), or False otherwise. Return this new string. 
#### Example 14
Input Strings : "hello" , "HELLO"
Output: 
```
True
```


### Example 15


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in two strings as inputs and returns True if one of the words is an anagram of the other (i.e., the letters can be rearranged to form another word), or False otherwise. Return this new string. 
#### Example 15
Input Strings : "Listen" , "Silent"
Output: 
```
True
```


### Example 16


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in two strings as inputs and returns True if they are palindromes (i.e., the string is the same when read backward or forward), or False otherwise. Return this new string. 
#### Example 16
Input Strings : "racecar" , "A man, a plan, a canal: Panama!"
Output: 
```
True
```


### Example 17


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in a string as an input and returns True if it is a pangram (i.e., contains every letter of the alphabet at least once), or False otherwise. Return this new string. 
#### Example 17
Input String : "The quick brown fox jumps over the lazy dog."
Output: 
```
True
```


### Example 18


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in two strings as inputs and returns True if they are anagrams of each other (i.e., contain the same letters but in a different order), or False otherwise. Return this new string. 
#### Example 18
Input Strings : "hello" , "world"
Output: 
```
False
```


### Example 19


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in a list of strings as an input and returns the longest string. Return this new string. 
#### Example 19
Input List : ["Python", "is", "awesome"]
Output: 
```
awesome
```


### Example 20


```

Fixed:
### Response:
```
#### Instruction:
Write a Python code that takes in a list of strings as an input and returns the shortest string. Return this new string. 
#### Example 20
Input List : ["Python", "is", "awesome"]
Output: 
```
is
```


