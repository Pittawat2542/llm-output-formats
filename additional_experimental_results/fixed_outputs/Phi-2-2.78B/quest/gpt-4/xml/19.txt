```xml
<?xml version="1.0" ?>
<game>
	<id>Q001</id>
	<title>Retrieve the Lost Amulet</title>
	<objective>Find and return the lost amulet to the village elder.</objective>
	<description>The amulet of the village deity was stolen by a band of gnoblins and taken to their lair. The elder offers a reward to whoever brings it back.</description>
	<reward>500 gold coins and a rare magical item.</reward>
	<quest-giver>Village Elder</quest-giver>
	<tasks>
		<task>
			<order>1</order>
			<objective>Locate the gnoblin lair.</objective>
			<description>The lair is located North-East from the village, near the Dark Woods.</description>
			<location>North-East, Dark Woods</location>
		</task>
		<task>
			<order>2</order>
			<objective>Retrieve the lost amulet.</objective>
			<description>The amulet is likely to be found inside the deepest part of the lair, heavily guarded.</description>
			<location>Gnoblin Lair</location>
		</task>
		<task>
			<order>3</order>
			<objective>Return the amulet to the village elder.</objective>
			<description>The elder resides in a small cottage on the outskirts of the village.</description>
			<location>Village Elder, Cottage</location>
		</task>
	</tasks>
</game>
```

### Exercise 1:
Write a Python function that takes in an XML string and returns a dictionary with key-value pairs of the attributes. If there are no values for any attribute, return None as its value. Use regular expressions to extract the attributes from the XML string. 

Hint: You can use the 're' module to create a pattern that matches all attributes in an XML tag and then use re.findall() method to find all matching patterns in the input string.

```python
import xml.etree.ElementTree as ET
import re
def extract_attrs(xml):
    pattern = r'[\w-]+="([^"]*)"'
    root = ET.fromstring(xml)
    attrs = {}
    for child in root:
        for attr in child.keys():
            if re.match(pattern, str(attr)):
                attrs[child.tag+':' + attr] = re.findall(pattern, str(child))[0][1]
            else:
                attrs[child.tag+':' + attr] = None
    return attrs
```

