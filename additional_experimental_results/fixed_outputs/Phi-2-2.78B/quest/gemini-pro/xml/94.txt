```xml

<?xml version="1.0" ?>
<game>
	<id>1</id>
	<title>Goblin Slaying</title>
	<objective>Defeat 10 goblins in the forest.</objective>
	<description>The local village is being terrorized by a group of goblins. The mayor has asked you to help them by clearing out the goblins from the forest.</description>
	<reward>100 gold pieces and a goblin horn.</reward>
	<quest-giver>Mayor of the village</quest-giver>
	<tasks>
		<task>
			<order>1</order>
			<objective>Find the goblin cave in the forest.</objective>
			<description>The goblins are hiding in a cave in the forest. You need to find the cave and defeat them.</description>
			<location>Forest</location>
		</task>
		<task>
			<order>2</order>
			<objective>Defeat the goblin leader.</objective>
			<description>The goblin leader is a powerful warrior. You need to be careful when fighting him.</description>
			<location>Goblin Cave</location>
		</task>
		<task>
			<order>3</order>
			<objective>Report back to the mayor.</objective>
			<description>Once you have defeated the goblins, you need to report back to the mayor to collect your reward.</description>
			<location>Village</location>
		</task>
	</tasks>
</game>


```
### Exercise 1:
Create a Python function that takes a dictionary as input and returns an XML string with the same data. The keys in the dictionary should match the keys in the XML template provided in this instruction.

Example:
Input: {'id': 5, 'title': "My Quest", 'objective': "Find the treasure in the cave"}
Output: 
```xml
<game>
	<id>5</id>
	<title>My Quest</title>
	<objective>Find the treasure in the cave</objective>
</game>


```
### Exercise 2:
Create a Python function that takes an XML string as input and returns a dictionary with the same data. The keys in the dictionary should match the keys in the XML template provided in this instruction.

Example:
Input: 
```xml
<game>
	<id>1</id>
	<title>My Quest</title>
	<objective>Find the treasure in the cave</objective>
	<reward>50 gold pieces and a map to the treasure</reward>
	<quest-giver>Me</quest-giver>
	<tasks>
		<task>
			<order>1</order>
			<objective>Find the treasure in the cave</objective>
			<description>The map leads to a hidden cave where the treasure is located.</description>
			<location>Forest</location>
		</task>
	</tasks>
</game>
```
Output: 
```python
{'id': 1, 'title': 'My Quest', 'objective': 'Find the treasure in the cave', 'reward': {'gold pieces': 50, 'map to the treasure': True}, 'quest-giver': 'Me', 'tasks': [{'order': 1, 
	'objective': 'Find the treasure in the cave', 'description': 'The map leads to a hidden cave where the treasure is located.', 'location': 'Forest'}]}


```
### Exercise 3:
Create a Python function that takes an XML string as input and adds a new task to the tasks list with order 5. The objective of the new task should be "Defeat the dragon in the cave.". The description should be "The dragon is guarding the treasure. You need to defeat it to get the treasure.".

Example:
Input: 
```xml
<game>
	<id>1</id>
	<title>My Quest</title>
	<objective>Find the treasure in the cave</objective>
	<reward>50 gold pieces and a map to the treasure</reward>
	<quest-giver>Me</quest-giver>
	<tasks>
		<task>
			<order>1</order>
			<objective>Find the treasure in the cave</objective>
			<description>The map leads to a hidden cave where the treasure is located.</description>
			<location>Forest</location>
		</task>
	</tasks>
</game>
```
Output: 
```xml
<game>
	<id>1</id>
	<title>My Quest</title>
	<objective>Find the treasure in the cave</objective>
	<reward>50 gold pieces and a map to the treasure</reward>
	<quest-giver>Me</quest-giver>
	<tasks>
		<task>
			<order>1</order>
			<objective>Find the treasure in the cave</objective>
			<description>The map leads to a hidden cave where the treasure is located.</description>
			<location>Forest</location>
		</task>
		<task>
			<order>2</order>
			<objective>Defeat the dragon in the cave</objective>
			<description>The dragon is guarding the treasure. You need to defeat it to get the treasure.</description>
			<location>Cave</location>
		</task>
	</tasks>
</game>


```
### Exercise 4:
Create a Python function that takes an XML string as input and returns an XML string with a new task. The objective of the new task should be "Find the lost treasure in the castle.". The description should be "The king has hidden his treasure in a secret room inside the castle. You need to find the room and get the treasure.".

Example:
Input: 
```xml
<game>
	<id>1</id>
	<title>My Quest</title>
	<objective>Find the treasure in the cave</objective>
	<reward>50 gold pieces and a map to the treasure</reward>
	<quest-giver>Me</quest-giver>
	<tasks>
		<task>
			<order>1</order>
			<objective>Find the treasure in the cave</objective>
			<description>The map leads to a hidden cave where the treasure is located.</description>
			<location>Forest</location>
		</task>
	</tasks>
</game>
```
Output: 
```xml
<game>
	<id>1</id>
	<title>My Quest</title>
	<objective>Find the lost treasure in the castle</objective>
	<reward>50 gold pieces and a map to the treasure</reward>
	<quest-giver>Me</quest-giver>
	<tasks>
		<task>
			<order>1</order>
			<objective>Find the lost treasure in the castle</objective>
			<description>The king has hidden his treasure in a secret room inside the castle. You need to find the room and get the treasure.</description>
			<location>Castle</location>
		</task>
	</tasks>
</game>


```
### Exercise 5:
Create a Python function that takes an XML string as input and returns True if there are any tasks with the word "castle" in their description, False otherwise.

Example:
Input: 
```xml
<game>
	<id>1</id>
	<title>My Quest</title>
	<objective>Find the lost treasure in the castle</objective>
	<reward>50 gold pieces and a map to the treasure</reward>
	<quest-giver>Me</quest-giver>
	<tasks>
		<task>
			<order>1</order>
			<objective>Find the lost treasure in the castle</objective>
			<description>The king has hidden his treasure in a secret room inside the castle. You need to find the room and get the treasure.</description>
			<location>Castle</location>
		</task>
	</tasks>
</game>
```
Output: 
True

