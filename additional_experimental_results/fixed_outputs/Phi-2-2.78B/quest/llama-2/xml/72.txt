
**Exercise 1**
Create a game object using XML in Python that represents the following scenario:
- The player must solve a series of puzzles to escape a room.
- Each puzzle has an objective, description, and solution.
- The solutions can be found by interacting with objects in the room or solving other puzzles.

```python
# Create the game object using XML string
xml_game = '<game>\n<id>puzzle 1 id</id>\n<title>Puzzle 1</title>\n<objective>Find a key under the table.</objective>\n<description>There is a small table in the room. Underneath it, there should be a key that opens the door.</description>\n<solution>Locate the key by moving around the room and looking for clues.</solution>\n'
game = xml.dom.minidom.parseString(xml_game)

# Access game object attributes
print(f"The game id is {game.getAttribute('id')}")
print(f"The puzzle title is {game.getElementsByTagName('title')[0].firstChild.data}")
print(f"The objective of the puzzle is {game.getElementsByTagName('objective')[0].firstChild.data}")
print(f"The description of the puzzle is {game.getElementsByTagName('description')[0].firstChild.data}")
print(f"The solution to the puzzle is {game.getElementsByTagName('solution')[0].firstChild.data}")
```


**Exercise 2**
Modify the game object created in Exercise 1 to add a new puzzle with an objective, description, and solution.

```python
# Modify game object attributes
game.removeAttribute("id")
new_puzzle = game.createElement("puzzle")
new_objective = game.createElement("objective")
new_title = game.createElement("title")
description = game.createElement("description")
solution = game.createElement("solution")

# Set attributes for new puzzle
new_objective.setAttribute("name", "Puzzle 2")
new_title.setAttribute("name", "The Puzzle Room")
description.setAttribute("text", "Find the exit by solving a series of puzzles.")
solution.setAttribute("text", "Follow clues and solve puzzles to find the exit.")

# Add new puzzle element to game object
game.insertBefore(new_puzzle, game.createElement("puzzles"))
game.getElementsByTagName("puzzles")[0].appendChild(new_puzzle)
new_puzzle.insertBefore(new_objective, new_title)
new_puzzle.insertAfter(description, solution)

# Save updated game object as XML string
xml_game = xml.dom.minidom.parseString(str(game))
print("Updated Game Object:\n")
print(xml_game.toprettyxml(indent="  "))
```


**Exercise 3**
Create a function that takes in an XML game object and returns the number of puzzles in the game.

```python
def count_puzzles(game):
    """Returns the number of puzzles in the game."""
    # Count number of puzzle elements
    num_puzzles = len(game.getElementsByTagName("puzzle"))
    return num_puzzles
```


**Exercise 4**
Create a function that takes in an XML game object and returns the title of the first puzzle in the game.

```python
def get_title_of_first_puzzle(game):
    """Returns the title of the first puzzle in the game."""
    # Get first puzzle element
    first_puzzle = game.getElementsByTagName("puzzle")[0]

    # Get title attribute and return value
    title = first_puzzle.getAttribute("name")
    return title
```


**Exercise 5**
Create a function that takes in an XML game object and returns the objective of all puzzles in the game as a list.

```python
def get_objective(game):
    """Returns the objective of all puzzles in the game."""
    # Initialize empty list to store objectives
    objectives = []

    # Get objective attribute for each puzzle and add to list
    for puzzle in game.getElementsByTagName("puzzle"):
        objective = puzzle.getAttribute("name")
        objectives.append(objective)

    return objectives
```
