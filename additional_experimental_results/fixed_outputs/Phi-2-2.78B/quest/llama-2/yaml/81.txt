"""
import json
from typing import Dict, Any, List

from . import utils


def _create_game(data: Dict[str, Any]) -> Dict[str, Any]:
    game = dict()

    for key in data.keys():
        if key == "id":
            game["id"] = utils.uuid()

        elif key in ["description", "objective", "quest_giver", "reward"]:
            if isinstance(data[key], str):
                data[key] = json.dumps(data[key])

        game[key] = data[key]

    return game


def _create_task(data: Dict[str, Any]) -> List[Dict]:
    tasks = []

    for key in data["tasks"].keys():
        task = dict()

        if "location" not in data["tasks"][key] and "description" in data["tasks"][key]:
            data["tasks"][key]["location"] = task_locations[0]

        if "objective" not in data["tasks"][key]:
            task["objective"] = utils.uuid()

        if "order" not in data["tasks"][key]:
            data["tasks"][key]["order"] = 0

        for key, value in data["tasks"][key].items():
            if isinstance(value, str):
                task[key] = json.dumps(value)
            elif isinstance(value, int):
                task[key] = value

        tasks.append(_create_game(data))

    return tasks


def _create_quests(data: Dict[str, Any]) -> List[Dict]:
    quests = []

    for key in data["quests"].keys():
        if isinstance(data["quests"][key], str):
            data["quests"][key] = json.dumps(data["quests"][key])

        quests.append(_create_game(data))

    return quests


def _create_quest_giver(data: Dict[str, Any]) -> Dict[str, Any]:
    if isinstance(data["quest_giver"], str):
        data["quest_giver"] = json.dumps(data["quest_giver"])

    return _create_game(data)


def _create_task_locations(data: Dict[str, Any]) -> List[Dict]:
    locations = []

    for key in data["tasks"].keys():
        if "location" not in data["tasks"][key] and "description" in data["tasks"][key]:
            task_locations.append(data)

    return locations


def _create_quest_objectives(data: Dict[str, Any]) -> List[Dict]:
    if isinstance(data["quest_giver"], str):
        data["quest_giver"] = json.dumps(data["quest_giver"])

    return _create_game(data)


def _create_quests_objectives(data: Dict[str, Any]) -> List[Dict]:
    if isinstance(data["quests"][0], str):
        data["quests"] = json.loads(data["quests"])

    return _create_game(data)


def _create_tasks(data: Dict[str, Any]) -> List[Dict]:
    if isinstance(data["tasks"][0], str):
        data["tasks"] = json.loads(data["tasks"])

    return tasks


def _get_input() -> Dict[str, Any]:
    try:
        data = utils.json_from_file(utils.read_in_file())

        if isinstance(data["quests"][0], str):
            task_locations.append(data)

        if isinstance(data["quests"], [str]):
            data["quests"] = json.loads(data["quests"])

        if isinstance(data["tasks_locations"], list):
    """
    Fixed:
### Response:
"""
import utils
from . import utils


def _create_game(data: Dict[str, Any]) -> Dict:
    return _create_game(data)


def create():
    if isutils.yaml_url_response():

    #
    pass


def response_fixed()):

    pass


"""
Fixed:
### Response:
"""
import utils
from . import utils


def get_input()()
