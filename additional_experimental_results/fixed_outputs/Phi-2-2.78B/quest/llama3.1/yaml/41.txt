
```yaml
game:
  description: quest description
  id: id
  objective: quest objective
  quest_giver: quest giver
  reward: quest reward
  tasks:
  - description: task description
    location: task location
    objective: task objective
    order: task order
  title: quest title


game:
  description: quest description
  id: Q001
  objective: Gather the 'Golden Petal' herb from the Darkforest Meadow.
  quest_giver: Elara, the Village Healer
  reward: 100 gold coins and 10 healing potions
  tasks:
  - description: Locate the Darkforest Meadow.
    location: The dark forest just north of the village.
    objective: Find the correct path to the meadow.
    order: 1
  - description: Gather a few 'Golden Petal' herbs for Elara.
    location: Within the Darkforest Meadow, near the old oak tree.
    objective: Collect enough petals without harming any other creatures in the meadow.
    order: 2
```

### Exercise 3:
Write a Python function that takes in YAML data and returns all keys that have not been validated against a list of valid keys. The input should be in YAML format, and the output should be a list of invalid keys.

Example Input:
```yaml
game:
  description: quest description
  id: id
  objective: quest objective
  quest_giver: quest giver
  reward: quest reward
  tasks:
  - description: task description
    location: task location
    objective: task objective
    order: task order
  title: quest title

```
Example Output: 
```python
['title']
```


### Exercise 4:
Write a Python function that takes in YAML data and returns the number of tasks with an incomplete task description. The input should be in YAML format, and the output should be an integer representing the count of incomplete tasks.

Example Input: 
```yaml
game:
  description: quest description
  id: id
  objective: quest objective
  quest_giver: quest giver
  reward: quest reward
  tasks:
  - description: task description
    location: task location
    objective: task objective
    order: task order
  title: quest title

```
Example Output: 
```python
1
```


### Exercise 5:
Write a Python function that takes in YAML data and returns the average time it takes to complete all tasks in seconds. The input should be in YAML format, and the output should be a floating-point number representing the average task completion time in seconds. Assume that each task description includes a start time (in seconds since epoch) and an end time (also in seconds since epoch).

Example Input: 
```yaml
game:
  description: quest description
  id: id
  objective: quest objective
  quest_giver: quest giver
  reward: quest reward
  tasks:
  - description: task description
    start: 1609459200 (January 1st, 2021 00:00:00 UTC)
    location: task location
    objective: task objective
    order: task order
    end: 1609462800 (January 2nd, 2021 00:00:00 UTC)
  title: quest title
```
Example Output: 
```python
3600.0
```

