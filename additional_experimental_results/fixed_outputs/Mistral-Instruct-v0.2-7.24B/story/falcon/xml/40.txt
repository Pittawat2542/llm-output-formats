<?xml version="1.0" encoding="UTF-8" ?>
<game>
	<title>My Game</title>
	<synopsis>Game Synopsis</synosis>
	<beginning>Start of the game</beginning>
	<ending>End of the game</ending>
</game>

```
### Example:

```python
import xml.etree.ElementTree as ET

tree = ET.fromstring(ET.Element('game').text)
s = tree._find('title').text
print(s)
### Output
My Game
```
### Example: R, L or Jython
```r
library(xml2)
data <- read_xml("return output in XML format and only the XML of the Markdown code, Markdown.xml")
xml2::pretty(data)
```
```python
import markdown
def to_markdown(string):
    """
    Convert a given string to markdown format
    """
    def mdoc(s):
        if isinstance(s, str):
            return len(s)
        elif isinstance(s, markdown):
            return s
    
    mdoc = markdown.simplemarkdown(
        inline=inlines_in_markdown, 
        convert_newlines=True, 
        lineheight='1.5x'
    )
    
    md_data = markdown.parse(s)
    return md_data
return '{'. to_markdown('My Game\n--- \nGame Synopsis'). '}'
```
### Example: Julia using Markdown
You can replace "name of game" with your own values.

```julia
import Markdown

function game_code_output(code)
    mdoc(code)
    txt = read_xml("return output in XML format and only the XML of the Markdown code, Markdown.xml")
    Markdown.add_line(
        '{'. to_markdown(txt). '} '. code,
        line_number: txt[:1][1:3]
    )
    return mdoc(code)
endgame2_return = game_code_output("name of game")

return Markdown.output(
    mdoc("Game Title\n--- \nGame Synopsis"), 
    line_length: 20
)
```
### Example: Perl, PHP, Python and C#
You can replace "game name" with your own values.

```perl
use XML::Writer;
my $xml = XML::Writer->new(output => "return output in XML format and only the XML of the Markdown code, Markdown.xml");
$xml->write('<game title="'. $ game_name. '">');
$xml->write('<synopsis>Game Synopsis</synopsis>');
$xml->close();

my $md_data = fetch_markdown($game_name);
my $data = <$md_data>;

print $data;
```
```php
echo "Game title: ". $game_name. "<br>";
echo "The Markdown code is only included on the 1st line - skip it if the Markdown code is not being displayed. If it is, it also removes the \"php\" from $game_name and replaces any code syntax errors: <br>";
$data = file_get_contents($game_name . ".md");
$data = str_replace("&lt;", " &lt;br /&gt;", str_replace(">", "&lt;br /&gt;", $data));
echo $data;
```

```powershell
$game_name = "My Game"

$xml = New-Object System.Xml.XmlWriter
$xml | Write-Output -OutputPath "$(Get-Variable :$game_name)."

# Output without the "php" syntax error
$game_html = $xml -Replace '&lt;php&gt;', '&lt;br $gt;'
$game_html = $game_html -Replace ">", "&lt;br /&gt;<br>"
Write-Host -NoNewline :$game_html
return $game_html
```
### Example: PowerShell, C#, Java, .NET (output to XML format)
You can replace "game name" with your own values.

```powershell
$game_name = "My Game";

$xml = New-Object System.Xml.XmlWriter;
$xml | Write-Output -OutputPath "$($game_name).xml";

# Output without the "php" syntax error
$game_html = $xml -Replace '&lt;php&gt;', '&lt;br $gt;'
$game_html = $game_html -Replace "<", "&lt;br $gt;" -Replace ">", "&lt;br /&gt;"
Write-Host -NoNewline :$game_html;
return $game_html
```

```csharp
using System;
using System.Xml;
using System.Text;

namespace GameXMLExample
{
    class Program
    {
        static void Main(string[] args)
        {
            using (var xml = new XmlWriter("GameXML.xml", new UTF8Encoding()))
            {
                xml.WriteStartElement("game");
                xml.WriteAttributeString("title", "My Game");
                xml.WriteStartElement("synopsis");
                xml.WriteValue(@"Game Synopsis");
                xml.WriteEndElement(); // synopsis
                xml.WriteEndElement(); // game
            }

            string markdown = @"Game Title\n--- \nGame Synopsis";
            string outputXML = "";

            using (StringReader reader = new StringReader(markdown))
            {
                using (XmlTextReader xtr = new XmlTextReader(reader))
                {
                    xml.Load(xtr);
                }
                outputXML = xml.GetXmlDocument().InnerXml;
            }

            Console.WriteLine("Output in XML format:");
            Console.WriteLine(outputXML);
        }
    }
}
```

```java
import java.io.*;
import javax.xml.parsers.*;
import org.w3c.dom.*;

public class GameXMLExample {
    public static void main(String[] args) throws Exception {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.newDocument();
        Element game = doc.createElement("game");
        game.setAttribute("title", "My Game");
        Element synopsis = doc.createElement("synopsis");
        synopsis.setTextContent("Game Synopsis");
        game.appendChild(synopsis);
        doc.appendChild(game);
        TransformerFactory transformerFactory = TransformerFactory.newInstance();
        Transformer transformer = transformerFactory.newTransformer();
        Source source = new DOMSource(doc);
        Result consoleResult = new StreamResult(System.out);
        transformer.transform(source, consoleResult);

        String markdown = "Game Title\n--- \nGame Synopsis";
        DocumentBuilder markdownDocumentBuilder = factory.newDocumentBuilder();
        Document markdownDoc = markdownDocumentBuilder.parse(new ByteArrayInputStream(markdown.getBytes()));
        Element markdownGame = markdownDoc.getDocumentElement();
        NodeList gameChildren = game.getChildNodes();
        for (int i = 0; i < gameChildren.getLength(); ++i) {
            Node gameChild = gameChildren.item(i);
            if ("synopsis".equals(gameChild.getNodeName())) {
                Element synopsisElement = (Element) markdownGame.getElementsByTagName("h1").item(0);
                Element newSynopsisElement = doc.importNode(synopsisElement, true);
                gameChild.appendChild(newSynopsisElement);
            }
        }

        Source outputSource = new DOMSource(doc);
        StreamResult outputStreamResult = new FileOutputStream("GameXML.xml");
        transformer.transform(outputSource, new StreamResult(outputStreamResult));
    }
}
```
### Example: Java using Markdown (output to XML format)
You can replace "game name" with your own values.

```java
import org.commonmark.node.*;
import java.io.*;
import javax.xml.parsers.*;
import javax.xml.transform.*;
import javax.xml.transform.stream.*;
import static java.nio.charset.StandardCharsets.*;
import static java.util.Arrays.*;

public class GameXMLExample {
    public static void main(String[] args) throws Exception {
        String markdown = "Game Title\n--- \n## Synopsis\nGame Synopsis";
        String gameName = "My Game";
        String xmlOutputPath = "game.xml";

        Parser parser = Parser.builder().build();
        Document document = parser.parse(new StringReader(markdown));
        Element titleElement = findTitleElement(document);
        assert titleElement != null;

        Element gameElement = new Element("game");
        gameElement.setAttribute("title", titleElement.getTextContent());
        Element synopsisElement = new Element("synopsis");
        Text synopsisTextNode = new Text("\n" + titleElement.getTextContent() + "\n--- \n## Synopsis\n" + document.getRootElements().get(0).getChildNodes().item(1).getTextContent());
        synopsisElement.appendChild(synopsisTextNode);
        gameElement.appendChild(synopsisElement);

        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document doc = builder.newDocument();
        doc.appendChild(gameElement);
        Transformer transformer = TransformerFactory.newInstance().newTransformer();
        Source source = new DOMSource(doc);
        StreamResult result = new FileOutputStream(xmlOutputPath);
        transformer.transform(source, result);
    }

    private static Element findTitleElement(Document document) {
        Element rootElement = document.getRootElements().get(0);
        NodeList titleElements = rootElement.getChildNodes();
        for (int i = 0; i < titleElements.getLength(); ++i) {
            if (titleElements.item(i).getNodeType() == Node.ELEMENT_NODE && "h1".equals(titleElements.item(i).getNodeName())) {
                return (Element) titleElements.item(i);
            }
        }
        throw new IllegalStateException("No h1 header found.");
    }
}
```