Here is a Python function that generates an enemy battle status and returns the output in XML format:

```python
import xml.etree.ElementTree as ET

class Enemy:
    def __init__(self, id, name, description):
        self.id = id
        self.name = name
        self.description = description
        self.stats = {
            "hp": 100,
            "mp": 50,
            "atk": 20,
            "def": 15,
            "spd": 30
        }

    def to_xml(self):
        root = ET.Element("game")
        enemy = ET.SubElement(root, "enemy")

        id_element = ET.SubElement(enemy, "id")
        id_element.text = str(self.id)

        name_element = ET.SubElement(enemy, "name")
        name_element.text = self.name

        description_element = ET.SubElement(enemy, "description")
        description_element.text = self.description

        stats_element = ET.SubElement(enemy, "stats")

        for key, value in self.stats.items():
            stat_element = ET.SubElement(stats_element, key)
            stat_element.text = str(value)

        return ET.tostring(root, encoding="unicode")


# Example usage:
enemy = Enemy(1, "Goblin", "A weak monster.")
xml_output = enemy.to_xml()

print(xml_output)
```

This code defines an `Enemy` class that can be initialized with an ID, name, and description. It also has a dictionary of stats (hp, mp, atk, def, spd) which are assigned default values.

The `to_xml` method generates an XML string representing the enemy's status using the ElementTree library.

When you run this code with the example enemy, it will print out the following XML output:

```xml
<?xml version="1.0" ?>
<game>
    <enemy>
        <id>1</id>
        <name>Goblin</name>
        <description>A weak monster.</description>
        <stats>
            <hp>100</hp>
            <mp>50</mp>
            <atk>20</atk>
            <def>15</def>
            <spd>30</spd>
        </stats>
    </enemy>
</game>
```