Here is a Python function that generates an enemy battle status in XML format:

```python
import xml.etree.ElementTree as ET
from random import randint

def generate_enemy_status():
    # Define the root element
    game = ET.Element('game')

    # Create the enemy element
    enemy = ET.SubElement(game, 'enemy')

    # Set enemy attributes
    id_attr = str(randint(1, 100))  # Random ID between 1 and 100
    name_attr = f"Enemy {id_attr}"
    description_attr = "A fierce foe"
    hp_attr = randint(10, 50)  # Random HP between 10 and 50
    mp_attr = randint(5, 20)  # Random MP between 5 and 20
    atk_attr = randint(2, 6)  # Random ATK between 2 and 6
    def_attr = randint(1, 4)  # Random DEF between 1 and 4
    spd_attr = randint(3, 7)  # Random SPD between 3 and 7

    # Create enemy sub-elements
    id_elem = ET.SubElement(enemy, 'id')
    name_elem = ET.SubElement(enemy, 'name')
    description_elem = ET.SubElement(enemy, 'description')

    # Create stats element
    stats = ET.SubElement(enemy, 'stats')
    hp_elem = ET.SubElement(stats, 'hp')
    mp_elem = ET.SubElement(stats, 'mp')
    atk_elem = ET.SubElement(stats, 'atk')
    def_elem = ET.SubElement(stats, 'def')
    spd_elem = ET.SubElement(stats, 'spd')

    # Set text for enemy sub-elements
    id_elem.text = id_attr
    name_elem.text = name_attr
    description_elem.text = description_attr

    # Set text for stats sub-elements
    hp_elem.text = str(hp_attr)
    mp_elem.text = str(mp_attr)
    atk_elem.text = str(atk_attr)
    def_elem.text = str(def_attr)
    spd_elem.text = str(spd_attr)

    # Create the XML string
    tree = ET.ElementTree(game)
    xml_str = ET.tostring(tree.getroot(), encoding='unicode')

    return xml_str

# Example usage:
enemy_status = generate_enemy_status()
print(enemy_status)
```

When you run this code, it generates an enemy battle status in XML format. The `generate_enemy_status` function creates a new enemy with random attributes and returns the XML string.